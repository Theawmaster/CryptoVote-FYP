import sys, os
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '..', 'backend')))

from utilities.blind_signature_utils import unblind_signature, verify_signed_token, load_public_key

# === Token and Signature (Example Only) ===
original_token = "ab5a3c9e41f0e8d31e7d9a78a6b4c0f1"
signed_blinded_hex = "5cb708c223f020aed180414e0831208acfa8f8b262b64522a8b257e97be3e77316ffdd40de7605266ae3971d1856a677ae6c586294eeedb7443693c23ba92bb0012b7eea92fff3a4c72e5375b254a35567292eefc0ee7c938799e83e9d5001ccc5a6e9f93a55b070dd209fc9057f33d03cafac44e1d283a45096e77773fe2677157769d728ee40667a550cbcd6bf8a0ca74875d6a3ee172b19993115d2e874127584a67e641be31018287d8dd101ec1149bec7c64c24178ee3efa03fba6b062adde41810b185e95ee7af7b47f2fc2268fe88b20628bc2c221093e99db640757bb1b5629c79127812486ffc4572d653b0b857711774e77f743fc17842b5122af0"  # replace with actual hex
signed_blinded_int = int(signed_blinded_hex, 16)

# r from simulate_blind.py output
r = 19562923676309699115215991211145404750388886569889603902203067608217250082199382322752080051029148123120639126542445791718448678960135488161456568575183197876761155576567528172835231990813503576898063005662557493069560524678162740171828782386861982556979134034392499880170393526354849402730769277301274175399053081760842480222932258877185144394471126052087080208790159814288451817432052172413269404593042573252357142902444420957758951888894212668357370734634457355667386433352390649723235182193064905541057574290739825917541594287714293243792310670303599722475213374550155037149901598805912520573082291424929092357888

# === Unblind and Verify ===
signature_int = unblind_signature(signed_blinded_int, r)
signature_hex = hex(signature_int)[2:]

pubkey = load_public_key()
is_valid = verify_signed_token(pubkey, original_token.encode(), signature_int)

print(f"ðŸ§© Final signature (hex): {signature_hex}")
print(f"âœ… Signature valid? {is_valid}")
